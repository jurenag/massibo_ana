### General parameters
# The directory where the 'load/' and 'summary/'
# directories are located. The input data, as
# generated by the preprocessor, is expected to
# be in the 'load/' directory, and the output
# of the analyzer is saved in the 'summary/'
# directory.
workspace_dir: ''

# Every file in the load-directory whose name
#Â starts with one of the strings in this list
# is elegible for analysis, eventually depending
# on the analyzable_marks list
strips_to_analyze:
  - '450'
  - '225'
  - '1088'

# A file in the load-directory must contain
# in its name at least one of the strings in
# this list to be considered for analysis
analyzable_marks:
  - ''

# analyzable_marks:
#   - '-OV20dV-'
#   - '-OV30dV-'
#   - '-OV40dV-'

# Whether to print functioning related messages
verbose: true

# Whether to generate a PDF report
generate_report: true

# Whether to flip the waveforms about the baseline
flip_about_baseline: false

### Parameters for the rebinning process
# Regarding the waveform signals: this is the
# number of adjacent points to be merged into
# a single point
merged_points: 4

### Parameters for baseline computation
# It must belong to the interval [0.0, 1.0]. For
# each waveform, this value represents the fraction
# of the signal which is used to compute the
# baseline. P.e. 0.2 means that, for each waveform,
# only its first 20% (in time) of the signal is used
# to compute the baseline.
signal_fraction_for_median_cutoff: 0.15

# If defined, then the baseline is computed as the
# average of the points (which are defined and belong
# to the starting fraction of the signal, specified
# by the signal_fraction_for_median_cutoff parameter)
# which deviate from the computed median by less than
# the absolute value of this parameter.
half_width_about_median: null

### Parameters used for finding the integration window
# This value is interpreted as a fraction of the
# following quantity: the maximum of mean waveform
# minus its baseline. The time-point where the mean
# waveform deviates from its baseline more than this
# fraction, is taken as the lower integration limit.
rising_edge_tolerance: 0.1

# Time increment to be used to correct the lower
# limit time tick given by the rising_edge_tolerance.
integration_lower_lim_correction_s: -9.6e-08

# Integration window width, in seconds
integration_lim_width_s: 1.18e-06

### Parameters for waveform-integration
# Input electrical resistance of the DAQ system.
# The integral of the pulse is divided by this value
# in the released-charge computation.
input_resistance_in_ohms: 1.

# Amplification factor of the DAQ system.
# The integral of the pulse is divided by this value
# in the released-charge computation.
system_amplification_factor: 23500.  # Estimation in warm

### Parameters for fitting the charge histogram
# The initial percentage of the charge-histogram
# values to consider for the peak-search. P.e. setting
# this value to 0.1 means that, for the first peak-search,
# only the first 10% of the histogram values are
# considered. The peak search is an iterative process
# which widens the search range progressively. For
# more information check the documentation of the
# 'starting_fraction' parameter of the
# GainMeas.fit_gain() method. It must belong to the
# [0.0, 1.0] range.
peak_search_starting_fraction: 0.0

# The percentage step to increase the charge-histogram
# to consider in successive calls of
# scipy.signal.find_peaks(). It must belong to the
# (0.0, 1.0] range. For more information check the
# documentation of the 'step_fraction' parameter of
# the GainMeas.fit_gain() method. It must belong to
# the [0.0, 1.0] range.
peak_search_step_fraction: 0.01

# It sets a minimal prominence for a peak to be fit,
# based on a fraction of the maximum value within the
# charge-histogram. I.e. the only considered peaks are
# those whose prominence is bigger or equal to a fraction
# of the histogram maximum. It must belong to the
# [0.0, 1.0] range.
minimal_prominence_wrt_max: 0.05

# Number of standard deviations at both sides of the 
# mean seed to consider for the gaussian fit. It should
# be small enough so as to include just the peak-to-fit
# data, but big enough so as to include enough number
# of points. Note that each fit has three free parameters
# (the mean of the gaussian, the std and an scaling factor).
# Therefore, the number of points should be big enough so
# as to allow this 3-parameters fit.
gaussian_fit_std_no: 5. 

# Regarding the following five parameters: The charge
# histogram fit is performed for every
# (peaks_to_detect, bins_no) combination over a certain
# bidimensional grid. The fit which is finally considered
# is the one which gives the smallest error, where the
# error is the combination of the gaussian fits error and
# the (gain) linear fit error.

# Minimum (resp. maximum) number of peaks to look for
# in the charge histogram. 
min_peaks_to_detect: 2
max_peaks_to_detect: 5

# The bins_no samples are computed as
# np.linspace(min_bins_no, max_bins_no, bins_no_points)
min_bins_no: 65
max_bins_no: 100
bins_no_points: 4

# Fit range of the charge histogram. Set it to null in case
# you want to use the default range, which is inferred by
# matplotlib. Otherwise, it should be a dictionary where the
# keys are overvoltage values (in volts) and the values are
# lists of two floats, which are the lower and upper limits
# of the charge histogram range, respectively.
fit_charge_histogram_range: null

# Plot range of the charge histogram. Set it to null in case
# you want to use the default range, which is inferred by
# matplotlib. Otherwise, it should be a dictionary where the
# keys are overvoltage values (in volts) and the values are
# lists of two floats, which are the lower and upper limits
# of the charge histogram range, respectively.
plot_charge_histogram_range:
  2.:
    - -2.e-13
    - 25.e-13
  2.6:
    - -2.e-13
    - 25.e-13
  3.:
    - -2.e-13
    - 25.e-13
  3.4:
    - -2.e-13
    - 25.e-13
  4.:
    - -2.e-13
    - 25.e-13

### Quality-control parameters
# If the number of waveforms for a certain SiPM is smaller
# than this value, then the reliability parameter for such
# SiPM is set to 0.
minimum_number_of_waveforms: 100

### Parameters for plotting the integrated waveforms
# Number of waveforms per persistency plot
superimposed_waveforms: 400

# Vertical (signal magnitude) range for the
# persistency plots. Set it to null in case
# you want to use the default range, which is
# inferred by matplotlib.
persistency_plot_range:
 - 0.045
 - 0.2

# Whether to subtract the baseline (waveform per
# waveform) in the persistency plot. This parameter
# only affects the visualization.
subtract_baseline_in_persistency_plot: false

# Line width for the persistency plots
persistency_wvf_linewidth: 0.2

### Parameters for plotting the charge histogram
# Whether the charge histogram, and potentially the
# gaussian fits, should be plotted in logarithmic
# scale
logarithmic_charge_histogram: true

### Parameters for gain distributions report
# Number of bins in the resulting gain distributions
resulting_distributions_nbins: 40

# Whether to plot vertical red lines signaling the
# soft and hard thresholds in the resulting gain
# distributions
plot_vertical_red_threshold: false

# Number of standard deviations to consider for the
# soft and hard thresholds in the resulting gain
# distributions
std_number_soft: 3
std_number_hard: 5

# Linewidth for the vertical lines which mark the
# thresholds in the resulting gain distributions
vertical_thresholds_linewidth: 2.

# Number of significant digits to show (in
# scientific notation) for the gain mean and std
# in the resulting gain histograms and tables
gain_mean_ndigits: 2
gain_std_ndigits: 3

### Parameters for PDF report
# The name of the PDF report file. It is saved in
# the summary directory.
report_output_filename: 'gain_report.pdf'

# The following parameters give font sizes. They
# are adjusted to the A4 format, and they must not
# be changed.
title_font_size: 24
subtitle_font_size: 20
text_font_size: 14

# During the PDF report generation, sub-PDF files
# are generated, whose number of pages is limited
# by this parameter. This is done to avoid memory
# issues. The final PDF report is the concatenation
# of all these sub-PDF files.
max_pages_per_pdf_chunk: 20

### Parameters for the output JSON files
# It controls the indentation with which the json
# summary-file is generated. It is eventually
# passed to the 'indent' parameter of json.dump.
indent: 4

# Whether to overwrite the output JSON file if it
# already exists
json_overwrite: true

### Parameters for the output dataframe
# The name of the output dataframe file. It is saved
# in the summary directory.
output_dataframe_filename: 'gain_output_dataframe'