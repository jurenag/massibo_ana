09/04/2025
Adding a new class for a preprocessor which handles the numpy binary format is not good code design. The new (numpy) preprocessor should exploit functionalities from the old DataPreprocessor class by inheriting from a base class (which could be called DataPreprocessor) from which any new class (which adapts to any new format) should derive. I think this would be the optimal design. However, I don't have the time to do it this way now (and in any case it is probably not worth the effort, since we expect this to be the last format we use before ending massibo). For this reason, I am going to create a new class, maybe NumpyDataPreprocessor, which will probably call static methods from the old DataPreprocessor, but which does not inherit from the old DataPreproccesor. In spite of this, the goal for this new NumpyDataPreprocessor is the same as that of the old DataPreprocessor (i.e. generating a certain workspace structure with JSON files). I.e. the code could be exactly the same except for the fact that the format now is not ASCII nor WFM, but a numpy binary array.